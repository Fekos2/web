{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nexport interface DeviceMotionAccelerationData {\n    /**\n     * Amount of acceleration on the x-axis. (in m/s^2)\n     */\n    x: number;\n    /**\n     * Amount of acceleration on the y-axis. (in m/s^2)\n     */\n    y: number;\n    /**\n     * Amount of acceleration on the z-axis. (in m/s^2)\n     */\n    z: number;\n    /**\n     * Creation timestamp in milliseconds.\n     */\n    timestamp: any;\n}\nexport interface DeviceMotionAccelerometerOptions {\n    /**\n     * Requested period of calls to accelerometerSuccess with acceleration data in Milliseconds. Default: 10000\n     */\n    frequency?: number;\n}\n/**\n * @name Device Motion\n * @description\n * Requires Cordova plugin: `cordova-plugin-device-motion`. For more info, please see the [Device Motion docs](https://github.com/apache/cordova-plugin-device-motion).\n *\n * @usage\n * ```typescript\n * import { DeviceMotion, DeviceMotionAccelerationData } from '@ionic-native/device-motion/ngx';\n *\n * constructor(private deviceMotion: DeviceMotion) { }\n *\n * ...\n *\n * // Get the device current acceleration\n * this.deviceMotion.getCurrentAcceleration().then(\n *   (acceleration: DeviceMotionAccelerationData) => console.log(acceleration),\n *   (error: any) => console.log(error)\n * );\n *\n * // Watch device acceleration\n * var subscription = this.deviceMotion.watchAcceleration().subscribe((acceleration: DeviceMotionAccelerationData) => {\n *   console.log(acceleration);\n * });\n *\n * // Stop watch\n * subscription.unsubscribe();\n *\n * ```\n * @interfaces\n * DeviceMotionAccelerationData\n * DeviceMotionAccelerometerOptions\n */\nexport declare class DeviceMotion extends IonicNativePlugin {\n    /**\n     * Get the current acceleration along the x, y, and z axes.\n     * @returns {Promise<DeviceMotionAccelerationData>} Returns object with x, y, z, and timestamp properties\n     */\n    getCurrentAcceleration(): Promise<DeviceMotionAccelerationData>;\n    /**\n     * Watch the device acceleration. Clear the watch by unsubscribing from the observable.\n     * @param {AccelerometerOptions} options list of options for the accelerometer.\n     * @returns {Observable<DeviceMotionAccelerationData>} Observable returns an observable that you can subscribe to\n     */\n    watchAcceleration(options?: DeviceMotionAccelerometerOptions): Observable<DeviceMotionAccelerationData>;\n}\n"]}